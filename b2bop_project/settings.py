"""
Django settings for b2bop_project project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
# from .env import *
from corsheaders.defaults import default_headers
import os
import mongoengine
import os
# ❌ COMMENTED OUT - This was causing conflicts
# from pymongo import MongoClient

# Load Mongo URI from environment variable
MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017/user_management")

# ❌ COMMENTED OUT - This was creating duplicate connections
# Connect
# client = MongoClient(MONGO_URI)
# db = client.get_database("user_management")  # database name

# mongoengine.connect('B2BOP', host='localhost', port=27017)
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# import mongoengine
# mongoengine.connect('B2BOPDataManagement', host='localhost', port=27017)

# import os

# MONGODB_HOST = os.getenv('MONGODB_HOST')
# MONGODB_NAME = os.getenv('MONGODB_NAME')

# ❌ COMMENTED OUT - This was forcing localhost connection
# MONGODB_DATABASES = {
#     'default': {
#         'name': 'user_management',  # Your MongoDB database name
#         'host': 'localhost',
#         'port': 27017,
#     }
# }

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3)*o)j&1$08q65k4vsn2-&%ymv!dfe4*#1d)1d4pnudal$)gw*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CORS_ALLOW_ALL_ORIGINS = True
# CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "https://b2bop-frontend-react.onrender.com",
    "http://localhost:3000",
    "http://192.168.30.191:4200",
    "https://b2-b-op-git-dev-lakshmi-lakshmis-projects-276e5906.vercel.app",
    "https://b2bop.netlify.app"
]
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
   "https://b2bop-frontend-react.onrender.com",
    "http://192.168.30.191:4200",
    "https://b2-b-op-git-dev-lakshmi-lakshmis-projects-276e5906.vercel.app",
    "https://b2bop.netlify.app"
]
#CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    'content-type',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user_management',
    'rest_framework',
    'rest_framework_simplejwt',
    'django_mongoengine',
    'django_mongoengine.mongo_auth',
    'corsheaders',
    # 'django_cron',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'b2bop_project.custom_mideleware.customMiddleware' #custom middle ware
]

ROOT_URLCONF = 'b2bop_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'b2bop_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

AUTHENTICATION_BACKENDS = (
    'django_mongoengine.mongo_auth.backends.MongoEngineBackend',
)

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MAILGUN_API_KEY = os.getenv('MAILGUN_API_KEY')
MAILGUN_DOMAIN = os.getenv('MAILGUN_DOMAIN')

# SendGrid settings
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')

# CRON_CLASSES = [
#     'user_management.operations.user_operations.CheckPendingOrders',
# ]